#!/bin/bash --login
########## SBATCH Lines for Resource Request ##########
 
# limit of wall clock time - how long the job will run (same as -t)
#SBATCH --time=06:00:00             
# number of different nodes - could be an exact number or a range of nodes (same as -N)
#SBATCH --nodes=1                   
# number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --ntasks=1                  
# number of CPUs (or cores) per task (same as -c)
#SBATCH --cpus-per-task=4           
# memory required per allocated CPU (or core) - amount of memory (in bytes)
#SBATCH --mem-per-cpu=4G            
# you can give your job a name for easier identification (same as -J)
#SBATCH --job-name wfg4 
# stdout
#SBATCH --output=wfg4-sb.o%j
# stderr
#SBATCH --error=wfg4-sb.e%j
 
########## Command Lines to Run ##########

# The path to the executables
srcpath="/mnt/home/talukde1/research/oemo/onsga2r"
 
### change to the directory where your code is located
cd $srcpath

### call your executable (similar to mpirun)
if [ -f sh/rseeds.in ]; then
	seeds=`cat sh/rseeds.in` ;
	readarray -t rseed <<<"${seeds}" ;
else
	echo "error: 'sh/rseeds.in' not found, hence exitting ...";
    exit 1 ;
fi

for (( i=1; i<=30; i++ ))
do
    ./sh/run.sh onsga2r input_data/wfg4.in experiments/ ${i} ${rseed[i]} ;
    ./sh/run.sh nsga2r  input_data/wfg4.in experiments/ ${i} ${rseed[i]} ;
done

### write job information to output file
scontrol show job $SLURM_JOB_ID                 
