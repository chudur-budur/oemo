#!/bin/bash
# this script purses the all_pop.out and dumps generation
# wise stats into corresponding files.

mingen=$1;
maxgen=$2;
srcfile=$3
destdir=$4;

_usage()
{
	# example: ./burstpf 1 100 all_pop.out outdir
	printf "Usage: ./burstpf [mingen] [maxgen] [src-file] [destdir]\n";
	exit 0;
}

if [[ -z $maxgen ]] || [[ -z $mingen ]] || 
	[[ -z $srcfile ]] || [[ -z $destdir ]] ; then
	echo "error: some of the parameters are missing, hence exiting ...";
	_usage ;
fi

if [ ! -f "$srcfile" ]; then
	echo "error: $srcfile missing, hence exiting ...";
	_usage ;
fi

if [[ $srcfile == *"/"* ]]; then
	prefix=`echo $srcfile | awk -F"/" '{print $NF}' | awk -F"." '{print $1}'`;
else
	prefix=`echo $srcfile | awk -F"." '{print $1}'`;
fi

if [ ! -d "$destdir" ]; then
	mkdir "$destdir";
fi

for (( i=$mingen; i<=$maxgen; i++ ))
do
	echo "making snaps for gen = $i" ;
	j=$(( i+1 ));
	regex="/# gen = $i\tfe = /,/# gen = $j\tfe = /" ;
	awkreturn=`awk "$regex" "$srcfile" | head -n-1`
	if [ -n "$awkreturn" ]; then
		if [ -f "${destdir}/${prefix}-gen-${i}.out" ]; then
			rm -f "${destdir}/${prefix}-gen-${i}.out" ;
		fi
		awk "$regex" "$srcfile" | head -n-1 > "${destdir}/${prefix}-gen-${i}.out" ;
	fi
done
